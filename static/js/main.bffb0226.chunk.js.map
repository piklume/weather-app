{"version":3,"sources":["redux/country/country.selector.js","components/spinner-indeterminate/spinner-indeterminate.component.jsx","components/card/card.component.jsx","redux/country/country.types.js","redux/country/country.action.js","components/dialog-box/dialog-box.components.jsx","components/landing-page/landing-page.componenets.jsx","components/app-bar/app-bar.components.jsx","components/header/header.components.jsx","App.js","redux/country/country.reducer.js","redux/root-reducer.js","redux/country/country.saga.js","redux/root-saga.js","redux/store.js","index.js"],"names":["selectCountry","state","country","selectCountryValues","createSelector","countryInfo","selectWeatherValues","countryWeather","selectIsCountryFetching","isCountryFetching","selectIsWeatherFetching","isWeatherFetching","useStyles","makeStyles","theme","root","display","marginLeft","spacing","justifyContent","alignItems","alignContent","CircularIndeterminate","classes","className","CircularProgress","maxWidth","media","height","width","mapStateToProps","createStructuredSelector","isFetching","connect","CountryName","Capital","Population","LatLong","CountryFlag","handelClick","undefined","Card","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","onClick","CountryActionTypes","FETCH_COUNTRY_START","FETCH_COUNTRY_SUCCESS","FETCH_COUNTRY_FAILURE","FETCH_WEATHER_START","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","fetchWeatherSuccess","weather","type","payload","paperWidthSm","minWidth","imageStyles","padding","DialogTitle","withStyles","margin","closeButton","position","right","top","palette","grey","props","children","onClose","other","disableTypography","IconButton","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","weatherValues","dispatch","fetchWeatherStart","open","handleClose","Temperature","WeatherIcons","WindSpeed","Precip","useEffect","Dialog","aria-labelledby","id","style","src","alt","dividers","autoFocus","useState","showDialog","setShowDialog","toolBarStyle","grow","flexGrow","menuButton","marginRight","breakpoints","up","search","borderRadius","shape","backgroundColor","alpha","common","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","handelChange","value","handelSubmit","isDisabled","handelEnterPress","AppBar","Toolbar","noWrap","InputBase","placeholder","input","inputProps","onChange","onKeyPress","aria-controls","disabled","aria-haspopup","fetchCountryStart","searchText","searchField","setSearchField","setIsDisabled","length","event","preventDefault","target","key","App","INITIAL_STATE","errorMessage","countryReducer","action","rootReducer","combineReducers","fetchCountryAsync","fetchWeatherAsync","onFetchCountryStart","onFetchWeatherStart","countrySagas","console","log","fetch","then","response","json","countryData","name","capital","population","latlng","flag","put","message","tempApiKey","select","weatherData","current","temperature","weather_icons","wind_speed","precip","takeLatest","all","call","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bffb0226.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectCountry = state => state.country;\r\n\r\nexport const selectCountryValues = createSelector(\r\n    [selectCountry],\r\n    country => country.countryInfo\r\n);\r\n\r\nexport const selectWeatherValues = createSelector(\r\n    [selectCountry],\r\n    country => country.countryWeather\r\n);\r\n\r\nexport const selectIsCountryFetching = createSelector(\r\n    [selectCountry],\r\n    country => country.isCountryFetching\r\n);\r\n\r\nexport const selectIsWeatherFetching = createSelector(\r\n    [selectCountry],\r\n    country => country.isWeatherFetching\r\n);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },  \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignContent: 'center'\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      {/* <CircularProgress color=\"secondary\" /> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { selectIsCountryFetching } from '../../redux/country/country.selector';\r\nimport CircularIndeterminate from '../spinner-indeterminate/spinner-indeterminate.component';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n    width: 345\r\n  },\r\n});\r\n\r\nfunction MediaCard({ CountryName,Capital,Population,LatLong,CountryFlag,handelClick,isFetching }) {\r\n    // console.log('In Media card - ',CountryName,Capital,Population,LatLong,CountryFlag);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      (isFetching)? <CircularIndeterminate />\r\n      :\r\n      ((CountryName !== undefined) ? (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                className={classes.media}\r\n                image={CountryFlag}\r\n                title=\"Country Flag\"\r\n                />\r\n                <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {CountryName}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {`Capital - ${Capital}`}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {`Population - ${Population}`}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {`Latitude / Longitude - ${LatLong[0]},${LatLong[1]}`}\r\n                </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\" onClick={handelClick}>\r\n                See Weather\r\n                </Button>\r\n            </CardActions>\r\n            </Card>\r\n      )\r\n      : <div className='No-Item-Container'>Search for a country...</div>)\r\n    \r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isFetching: selectIsCountryFetching\r\n});\r\n\r\n export default connect(mapStateToProps)(MediaCard);\r\n","const CountryActionTypes = {\r\n    FETCH_COUNTRY_START: 'FETCH_COUNTRY_START',\r\n    FETCH_COUNTRY_SUCCESS: 'FETCH_COUNTRY_SUCCESS',\r\n    FETCH_COUNTRY_FAILURE: 'FETCH_COUNTRY_FAILURE',\r\n    FETCH_WEATHER_START: 'FETCH_WEATHER_START',\r\n    FETCH_WEATHER_SUCCESS: 'FETCH_WEATHER_SUCCESS',\r\n    FETCH_WEATHER_FAILURE: 'FETCH_WEATHER_FAILURE'\r\n};\r\n\r\nexport default CountryActionTypes;","import CountryActionTypes from \"./country.types\";\r\n\r\nexport const fetchCountryStart = (searchText) => ({\r\n    type: CountryActionTypes.FETCH_COUNTRY_START,\r\n    payload: searchText\r\n});\r\n\r\nexport const fetchCountrySuccess = (country) => ({\r\n    type: CountryActionTypes.FETCH_COUNTRY_SUCCESS,\r\n    payload: country\r\n});\r\n\r\nexport const fetchCountryFailure = (errorMessage) => ({\r\n    type: CountryActionTypes.FETCH_COUNTRY_FAILURE,\r\n    payload: errorMessage\r\n});\r\n\r\nexport const fetchWeatherStart = () => ({\r\n    type: CountryActionTypes.FETCH_WEATHER_START\r\n});\r\n\r\nexport const fetchWeatherSuccess = (weather) => ({\r\n    type: CountryActionTypes.FETCH_WEATHER_SUCCESS,\r\n    payload: weather\r\n});\r\n\r\nexport const fetchWeatherFailure = (errorMessage) => ({\r\n    type: CountryActionTypes.FETCH_WEATHER_FAILURE,\r\n    payload: errorMessage\r\n});\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { fetchWeatherStart } from '../../redux/country/country.action';\r\nimport { selectWeatherValues,selectIsWeatherFetching } from '../../redux/country/country.selector';\r\n\r\nimport CircularIndeterminate from '../spinner-indeterminate/spinner-indeterminate.component';\r\n\r\nconst useStyles = makeStyles({\r\n  paperWidthSm: {\r\n    minWidth: 230,\r\n    width: 230\r\n  },\r\n});\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst imageStyles = {\r\n  padding: '70px'\r\n}\r\n\r\n// const spinnerStyle = {\r\n//   display: 'flex',\r\n//   justifyContent: 'center',\r\n//   alignItems: 'center',\r\n//   alignContent: 'center'\r\n// }\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport function CustomizedDialogs({ open,handleClose,fetchWeatherStart,weatherValues,isFetching }) {\r\n    const classes = useStyles();\r\n\r\n    const { Temperature,WeatherIcons,WindSpeed,Precip } = weatherValues;\r\n  \r\n    // console.log('Weathervalues - ',Temperature,WeatherIcons,WindSpeed,Precip);\r\n\r\n    useEffect(() => {\r\n        fetchWeatherStart();\r\n    },[fetchWeatherStart]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog classes={{paperWidthSm: classes.paperWidthSm}} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Current Weather\r\n        </DialogTitle>\r\n        {/* <div className='spinner-container' style={spinnerStyle}>\r\n          <CircularIndeterminate /> \r\n        </div> */}\r\n        {(isFetching) ?        \r\n          <CircularIndeterminate /> \r\n        : (<div>\r\n            <img style={imageStyles} src={WeatherIcons} alt='item' />\r\n            <DialogContent dividers>\r\n              <Typography gutterBottom>\r\n                Temperature - {Temperature}\r\n              </Typography>\r\n              <Typography gutterBottom>\r\n                WindSpeed - {WindSpeed}\r\n              </Typography>\r\n              <Typography gutterBottom>\r\n              Precip - {Precip}\r\n              </Typography>\r\n            </DialogContent>\r\n         </div>)}\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    weatherValues: selectWeatherValues,\r\n    isFetching: selectIsWeatherFetching\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchWeatherStart: () => dispatch(fetchWeatherStart())\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CustomizedDialogs);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport './landing-page.styles.css';\r\n\r\nimport { selectCountryValues } from '../../redux/country/country.selector';\r\nimport MediaCard from '../card/card.component';\r\nimport CustomizedDialogs from '../dialog-box/dialog-box.components';\r\n// import { fetchWeatherStart } from '../../redux/country/country.action';\r\n\r\nconst LandingPage = ({ country }) => {\r\n\r\n    // console.log('In Landingpage -', country);\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    const handelClick = () => {\r\n        setShowDialog(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShowDialog(false);\r\n    }\r\n    \r\n    return (\r\n        <div className='landing-page-container'>\r\n            <MediaCard {...country} handelClick={handelClick} />\r\n            {/* <CustomizedDialogs open={showDialog} handleClose={handleClose}/> */}\r\n            {\r\n                (showDialog === true) ?\r\n                <CustomizedDialogs open={showDialog} handleClose={handleClose}/> : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    country: selectCountryValues\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(LandingPage);","import React from 'react';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolBarStyle: {\r\n    justifyContent: 'space-around'\r\n  }\r\n  ,grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar({ handelChange,value,handelSubmit,isDisabled,handelEnterPress }) {\r\n  const classes = useStyles();\r\n  const menuId = 'primary-search-account-menu';\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  \r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolBarStyle}>\r\n           <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Weather App\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={handelChange}\r\n              value={value}\r\n               onKeyPress={handelEnterPress}\r\n            />\r\n          </div>\r\n          <div className={classes.sectionDesktop}>           \r\n          <Button variant=\"contained\" color=\"primary\" aria-controls={menuId}\r\n           onClick={handelSubmit} \r\n           disabled={isDisabled}>\r\n            <SearchIcon />Search\r\n            </Button>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n              onClick={handelSubmit} \r\n              disabled={isDisabled}\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState,useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PrimarySearchAppBar from '../app-bar/app-bar.components';\r\n\r\nimport './header.styles.css'\r\n\r\nimport { fetchCountryStart } from '../../redux/country/country.action';\r\n\r\n\r\nconst Header = ({ fetchCountryStart }) => {\r\n\r\n    const [searchField, setSearchField] = useState('');\r\n    const [isDisabled, setIsDisabled] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setIsDisabled((searchField.length > 0) ? false : true);\r\n    },[searchField]);\r\n\r\n    const handelChange = event => {\r\n        event.preventDefault();\r\n\r\n        setSearchField(event.target.value);\r\n    }\r\n\r\n    const handelSubmit = event => {\r\n        event.preventDefault();\r\n        // console.log(searchField);\r\n\r\n        fetchCountryStart(searchField);\r\n    }\r\n\r\n    const handelEnterPress = event => {\r\n        if (event.key === 'Enter') {\r\n            handelSubmit(event);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='header-container'>\r\n            <PrimarySearchAppBar handelChange={handelChange} handelSubmit={handelSubmit} \r\n            value={searchField} isDisabled={isDisabled} handelEnterPress={handelEnterPress} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCountryStart: (searchText) => dispatch(fetchCountryStart(searchText))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Header);","import './App.css';\n\nimport LandingPage from './components/landing-page/landing-page.componenets';\nimport Header from './components/header/header.components';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n        <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","import CountryActionTypes from './country.types';\r\n\r\nconst INITIAL_STATE = {\r\n    countryInfo: {},\r\n    countryWeather: {},\r\n    isCountryFetching: false,\r\n    isWeatherFetching: false,\r\n    errorMessage: ''\r\n}\r\n\r\nconst countryReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CountryActionTypes.FETCH_COUNTRY_START:\r\n            return {\r\n                ...state,\r\n                isCountryFetching: true\r\n            }\r\n        case CountryActionTypes.FETCH_WEATHER_START:\r\n            return {\r\n                ...state,\r\n                isWeatherFetching: true\r\n            }\r\n        case CountryActionTypes.FETCH_COUNTRY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                countryInfo: action.payload,\r\n                isCountryFetching: false,\r\n                errorMessage: ''\r\n            }\r\n        case CountryActionTypes.FETCH_WEATHER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                countryWeather: action.payload,\r\n                isWeatherFetching: false,\r\n                errorMessage: ''\r\n            }\r\n        case CountryActionTypes.FETCH_COUNTRY_FAILURE:\r\n        case CountryActionTypes.FETCH_WEATHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                isCountryFetching: false,\r\n                isWeatherFetching: false,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default countryReducer;","import { combineReducers } from 'redux';\r\n\r\nimport countryReducer from './country/country.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    country: countryReducer\r\n});\r\n\r\nexport default rootReducer;","import { call, put, all, takeLatest, select } from 'redux-saga/effects';\r\n\r\nimport { fetchCountrySuccess,fetchCountryFailure,fetchWeatherSuccess,fetchWeatherFailure } from './country.action';\r\n\r\nimport CountryActionTypes from './country.types';\r\nimport { selectCountryValues } from './country.selector';\r\n\r\nif(process.env.NODE_ENV !== 'production') require('dotenv').config();\r\n// const apiKey = process.env.WEATHERSTACK_API_KEY;\r\n\r\nexport function* fetchCountryAsync(action) {\r\n//    yield console.log('In fetchCountryAsync, searching -',action.payload)\r\n   try {\r\n        yield console.log(`In fetchCountryAsync, fetching - https://restcountries.eu/rest/v2/name/${action.payload}`)\r\n\r\n       const countryData = yield fetch(`https://restcountries.eu/rest/v2/name/${action.payload}`)\r\n       .then(response => response.json());\r\n        // yield console.log(countryData.length);\r\n\r\n        let countryInfo;\r\n        if(countryData.length === 1) {\r\n            countryInfo = yield {\r\n                CountryName: countryData[0].name,\r\n                Capital: countryData[0].capital, \r\n                Population: countryData[0].population,\r\n                LatLong: countryData[0].latlng,\r\n                CountryFlag: countryData[0].flag\r\n            }     \r\n        } else if (countryData.length > 1) {\r\n            countryInfo = yield {\r\n                CountryName: countryData[1].name,\r\n                Capital: countryData[1].capital, \r\n                Population: countryData[1].population,\r\n                LatLong: countryData[1].latlng,\r\n                CountryFlag: countryData[1].flag\r\n            }  \r\n        }\r\n            \r\n        yield put(fetchCountrySuccess(countryInfo));\r\n   } catch(error) {\r\n       yield put(fetchCountryFailure(error.message));\r\n   }\r\n}\r\n\r\nexport function* fetchWeatherAsync() {\r\n    // yield console.log('In fetchWeatherAsync - ',apiKey)\r\n    // yield console.log(country.CountryName);\r\n    try {\r\n        const tempApiKey = '0fa642cd1eb503e292950eae74246c2d';\r\n        let country = yield select(selectCountryValues);\r\n\r\n        yield console.log(`In fetchWeatherAsync, fetching - http://api.weatherstack.com/current?access_key=${tempApiKey}&query=${country.CountryName}`)\r\n\r\n        const weatherData = yield fetch(`http://api.weatherstack.com/current?access_key=${tempApiKey}&query=${country.CountryName}`)\r\n        .then(response => response.json());\r\n        \r\n        // yield console.log(weatherData.current);\r\n\r\n        const weather = {\r\n            Temperature: weatherData.current.temperature,\r\n            WeatherIcons: weatherData.current.weather_icons,\r\n            WindSpeed: weatherData.current.wind_speed,\r\n            Precip: weatherData.current.precip\r\n        }\r\n\r\n        // yield console.log(weather);\r\n\r\n        yield put(fetchWeatherSuccess(weather));\r\n    } catch(error) {\r\n        yield put(fetchWeatherFailure(error.message));\r\n    }\r\n }\r\n\r\nexport function* onFetchCountryStart() {\r\n    yield takeLatest(\r\n        CountryActionTypes.FETCH_COUNTRY_START,\r\n        fetchCountryAsync\r\n    )\r\n}\r\n\r\nexport function* onFetchWeatherStart() {\r\n    yield takeLatest(\r\n        CountryActionTypes.FETCH_WEATHER_START,\r\n        fetchWeatherAsync\r\n    )\r\n}\r\n\r\nexport function* countrySagas() {\r\n    yield all([\r\n        call(onFetchCountryStart),\r\n        call(onFetchWeatherStart)\r\n    ]);\r\n}","import { all, call } from 'redux-saga/effects';\r\n\r\nimport { countrySagas } from './country/country.saga';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        call(countrySagas)\r\n    ]);\r\n}","import { createStore,applyMiddleware } from 'redux';\r\n\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './root-reducer';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif(process.env.NODE_ENV === 'development') {\r\n    middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}